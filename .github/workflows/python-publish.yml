# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]  # Trigger this workflow when a new release is published (tagged)
  workflow_dispatch:  # Trigger manually

permissions:
  contents: read  # Only need read access to pull the tagged releaseâ€™s contents

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all tags are fetched for accurate build from the tag

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      
      # Step 3: Install build dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      
      # Step 4: Build the package
      - name: Build package
        run: python -m build
      
      # Step 5: Publish the package to PyPI
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}


